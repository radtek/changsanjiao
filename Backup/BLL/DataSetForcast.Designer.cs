//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5477
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MMShareBLL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetForcast")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetForcast : global::System.Data.DataSet {
        
        private EvalutionDTDataTable tableEvalutionDT;
        
        private ForecastDataTable tableForecast;
        
        private FODataTable tableFO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetForcast() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetForcast(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EvalutionDT"] != null)) {
                    base.Tables.Add(new EvalutionDTDataTable(ds.Tables["EvalutionDT"]));
                }
                if ((ds.Tables["Forecast"] != null)) {
                    base.Tables.Add(new ForecastDataTable(ds.Tables["Forecast"]));
                }
                if ((ds.Tables["FO"] != null)) {
                    base.Tables.Add(new FODataTable(ds.Tables["FO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EvalutionDTDataTable EvalutionDT {
            get {
                return this.tableEvalutionDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ForecastDataTable Forecast {
            get {
                return this.tableForecast;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FODataTable FO {
            get {
                return this.tableFO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetForcast cln = ((DataSetForcast)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EvalutionDT"] != null)) {
                    base.Tables.Add(new EvalutionDTDataTable(ds.Tables["EvalutionDT"]));
                }
                if ((ds.Tables["Forecast"] != null)) {
                    base.Tables.Add(new ForecastDataTable(ds.Tables["Forecast"]));
                }
                if ((ds.Tables["FO"] != null)) {
                    base.Tables.Add(new FODataTable(ds.Tables["FO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEvalutionDT = ((EvalutionDTDataTable)(base.Tables["EvalutionDT"]));
            if ((initTable == true)) {
                if ((this.tableEvalutionDT != null)) {
                    this.tableEvalutionDT.InitVars();
                }
            }
            this.tableForecast = ((ForecastDataTable)(base.Tables["Forecast"]));
            if ((initTable == true)) {
                if ((this.tableForecast != null)) {
                    this.tableForecast.InitVars();
                }
            }
            this.tableFO = ((FODataTable)(base.Tables["FO"]));
            if ((initTable == true)) {
                if ((this.tableFO != null)) {
                    this.tableFO.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetForcast";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetForcast.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEvalutionDT = new EvalutionDTDataTable();
            base.Tables.Add(this.tableEvalutionDT);
            this.tableForecast = new ForecastDataTable();
            base.Tables.Add(this.tableForecast);
            this.tableFO = new FODataTable();
            base.Tables.Add(this.tableFO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEvalutionDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeForecast() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetForcast ds = new DataSetForcast();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void EvalutionDTRowChangeEventHandler(object sender, EvalutionDTRowChangeEvent e);
        
        public delegate void ForecastRowChangeEventHandler(object sender, ForecastRowChangeEvent e);
        
        public delegate void FORowChangeEventHandler(object sender, FORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EvalutionDTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLST;
            
            private global::System.Data.DataColumn columnNight;
            
            private global::System.Data.DataColumn columnAM;
            
            private global::System.Data.DataColumn columnPM;
            
            private global::System.Data.DataColumn columnDayAVG;
            
            private global::System.Data.DataColumn columnSocreCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EvalutionDTDataTable() {
                this.TableName = "EvalutionDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EvalutionDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EvalutionDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LSTColumn {
                get {
                    return this.columnLST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NightColumn {
                get {
                    return this.columnNight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AMColumn {
                get {
                    return this.columnAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMColumn {
                get {
                    return this.columnPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayAVGColumn {
                get {
                    return this.columnDayAVG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocreCountColumn {
                get {
                    return this.columnSocreCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EvalutionDTRow this[int index] {
                get {
                    return ((EvalutionDTRow)(this.Rows[index]));
                }
            }
            
            public event EvalutionDTRowChangeEventHandler EvalutionDTRowChanging;
            
            public event EvalutionDTRowChangeEventHandler EvalutionDTRowChanged;
            
            public event EvalutionDTRowChangeEventHandler EvalutionDTRowDeleting;
            
            public event EvalutionDTRowChangeEventHandler EvalutionDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEvalutionDTRow(EvalutionDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EvalutionDTRow AddEvalutionDTRow(string LST, string Night, string AM, string PM, string DayAVG, string SocreCount) {
                EvalutionDTRow rowEvalutionDTRow = ((EvalutionDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LST,
                        Night,
                        AM,
                        PM,
                        DayAVG,
                        SocreCount};
                rowEvalutionDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEvalutionDTRow);
                return rowEvalutionDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EvalutionDTDataTable cln = ((EvalutionDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EvalutionDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLST = base.Columns["LST"];
                this.columnNight = base.Columns["Night"];
                this.columnAM = base.Columns["AM"];
                this.columnPM = base.Columns["PM"];
                this.columnDayAVG = base.Columns["DayAVG"];
                this.columnSocreCount = base.Columns["SocreCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLST = new global::System.Data.DataColumn("LST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLST);
                this.columnNight = new global::System.Data.DataColumn("Night", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNight);
                this.columnAM = new global::System.Data.DataColumn("AM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAM);
                this.columnPM = new global::System.Data.DataColumn("PM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM);
                this.columnDayAVG = new global::System.Data.DataColumn("DayAVG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayAVG);
                this.columnSocreCount = new global::System.Data.DataColumn("SocreCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocreCount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EvalutionDTRow NewEvalutionDTRow() {
                return ((EvalutionDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EvalutionDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EvalutionDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EvalutionDTRowChanged != null)) {
                    this.EvalutionDTRowChanged(this, new EvalutionDTRowChangeEvent(((EvalutionDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EvalutionDTRowChanging != null)) {
                    this.EvalutionDTRowChanging(this, new EvalutionDTRowChangeEvent(((EvalutionDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EvalutionDTRowDeleted != null)) {
                    this.EvalutionDTRowDeleted(this, new EvalutionDTRowChangeEvent(((EvalutionDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EvalutionDTRowDeleting != null)) {
                    this.EvalutionDTRowDeleting(this, new EvalutionDTRowChangeEvent(((EvalutionDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEvalutionDTRow(EvalutionDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetForcast ds = new DataSetForcast();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EvalutionDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ForecastDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRQ;
            
            private global::System.Data.DataColumn columnSDMC;
            
            private global::System.Data.DataColumn columnSDQJ;
            
            private global::System.Data.DataColumn columnYBSX;
            
            private global::System.Data.DataColumn columnPM25x;
            
            private global::System.Data.DataColumn columnPM25y;
            
            private global::System.Data.DataColumn columnPM25z;
            
            private global::System.Data.DataColumn columnPM25k;
            
            private global::System.Data.DataColumn columnPM25x1;
            
            private global::System.Data.DataColumn columnPM25y1;
            
            private global::System.Data.DataColumn columnPM25z1;
            
            private global::System.Data.DataColumn columnPM25k1;
            
            private global::System.Data.DataColumn columnPM10x;
            
            private global::System.Data.DataColumn columnPM10y;
            
            private global::System.Data.DataColumn columnPM10z;
            
            private global::System.Data.DataColumn columnPM10k;
            
            private global::System.Data.DataColumn columnPM10x1;
            
            private global::System.Data.DataColumn columnPM10y1;
            
            private global::System.Data.DataColumn columnPM10z1;
            
            private global::System.Data.DataColumn columnPM10k1;
            
            private global::System.Data.DataColumn columnNO2x;
            
            private global::System.Data.DataColumn columnNO2y;
            
            private global::System.Data.DataColumn columnNO2z;
            
            private global::System.Data.DataColumn columnNO2k;
            
            private global::System.Data.DataColumn columnNO2x1;
            
            private global::System.Data.DataColumn columnNO2y1;
            
            private global::System.Data.DataColumn columnNO2z1;
            
            private global::System.Data.DataColumn columnNO2k1;
            
            private global::System.Data.DataColumn columnO31x;
            
            private global::System.Data.DataColumn columnO31y;
            
            private global::System.Data.DataColumn columnO31z;
            
            private global::System.Data.DataColumn columnO31k;
            
            private global::System.Data.DataColumn columnO31x1;
            
            private global::System.Data.DataColumn columnO31y1;
            
            private global::System.Data.DataColumn columnO31z1;
            
            private global::System.Data.DataColumn columnO31k1;
            
            private global::System.Data.DataColumn columnO38x;
            
            private global::System.Data.DataColumn columnO38y;
            
            private global::System.Data.DataColumn columnO38z;
            
            private global::System.Data.DataColumn column038k;
            
            private global::System.Data.DataColumn columnO38x1;
            
            private global::System.Data.DataColumn columnO38y1;
            
            private global::System.Data.DataColumn columnO38z1;
            
            private global::System.Data.DataColumn column038k1;
            
            private global::System.Data.DataColumn columnAQIx;
            
            private global::System.Data.DataColumn columnAQIy;
            
            private global::System.Data.DataColumn columnAQIz;
            
            private global::System.Data.DataColumn columnAQIk;
            
            private global::System.Data.DataColumn columnAQIo;
            
            private global::System.Data.DataColumn columnAQIp;
            
            private global::System.Data.DataColumn columnAQIq;
            
            private global::System.Data.DataColumn columnAQIr;
            
            private global::System.Data.DataColumn columnQuality;
            
            private global::System.Data.DataColumn columnParameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ForecastDataTable() {
                this.TableName = "Forecast";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ForecastDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ForecastDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RQColumn {
                get {
                    return this.columnRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SDMCColumn {
                get {
                    return this.columnSDMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SDQJColumn {
                get {
                    return this.columnSDQJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YBSXColumn {
                get {
                    return this.columnYBSX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25xColumn {
                get {
                    return this.columnPM25x;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25yColumn {
                get {
                    return this.columnPM25y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25zColumn {
                get {
                    return this.columnPM25z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25kColumn {
                get {
                    return this.columnPM25k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25x1Column {
                get {
                    return this.columnPM25x1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25y1Column {
                get {
                    return this.columnPM25y1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25z1Column {
                get {
                    return this.columnPM25z1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM25k1Column {
                get {
                    return this.columnPM25k1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10xColumn {
                get {
                    return this.columnPM10x;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10yColumn {
                get {
                    return this.columnPM10y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10zColumn {
                get {
                    return this.columnPM10z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10kColumn {
                get {
                    return this.columnPM10k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10x1Column {
                get {
                    return this.columnPM10x1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10y1Column {
                get {
                    return this.columnPM10y1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10z1Column {
                get {
                    return this.columnPM10z1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PM10k1Column {
                get {
                    return this.columnPM10k1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2xColumn {
                get {
                    return this.columnNO2x;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2yColumn {
                get {
                    return this.columnNO2y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2zColumn {
                get {
                    return this.columnNO2z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2kColumn {
                get {
                    return this.columnNO2k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2x1Column {
                get {
                    return this.columnNO2x1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2y1Column {
                get {
                    return this.columnNO2y1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2z1Column {
                get {
                    return this.columnNO2z1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO2k1Column {
                get {
                    return this.columnNO2k1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31xColumn {
                get {
                    return this.columnO31x;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31yColumn {
                get {
                    return this.columnO31y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31zColumn {
                get {
                    return this.columnO31z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31kColumn {
                get {
                    return this.columnO31k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31x1Column {
                get {
                    return this.columnO31x1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31y1Column {
                get {
                    return this.columnO31y1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31z1Column {
                get {
                    return this.columnO31z1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O31k1Column {
                get {
                    return this.columnO31k1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O38xColumn {
                get {
                    return this.columnO38x;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O38yColumn {
                get {
                    return this.columnO38y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O38zColumn {
                get {
                    return this.columnO38z;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _038kColumn {
                get {
                    return this.column038k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O38x1Column {
                get {
                    return this.columnO38x1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O38y1Column {
                get {
                    return this.columnO38y1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn O38z1Column {
                get {
                    return this.columnO38z1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _038k1Column {
                get {
                    return this.column038k1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIxColumn {
                get {
                    return this.columnAQIx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIyColumn {
                get {
                    return this.columnAQIy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIzColumn {
                get {
                    return this.columnAQIz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIkColumn {
                get {
                    return this.columnAQIk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIoColumn {
                get {
                    return this.columnAQIo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIpColumn {
                get {
                    return this.columnAQIp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIqColumn {
                get {
                    return this.columnAQIq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AQIrColumn {
                get {
                    return this.columnAQIr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityColumn {
                get {
                    return this.columnQuality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParameterColumn {
                get {
                    return this.columnParameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ForecastRow this[int index] {
                get {
                    return ((ForecastRow)(this.Rows[index]));
                }
            }
            
            public event ForecastRowChangeEventHandler ForecastRowChanging;
            
            public event ForecastRowChangeEventHandler ForecastRowChanged;
            
            public event ForecastRowChangeEventHandler ForecastRowDeleting;
            
            public event ForecastRowChangeEventHandler ForecastRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddForecastRow(ForecastRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ForecastRow AddForecastRow(
                        string RQ, 
                        string SDMC, 
                        string SDQJ, 
                        string YBSX, 
                        string PM25x, 
                        string PM25y, 
                        string PM25z, 
                        string PM25k, 
                        string PM25x1, 
                        string PM25y1, 
                        string PM25z1, 
                        string PM25k1, 
                        string PM10x, 
                        string PM10y, 
                        string PM10z, 
                        string PM10k, 
                        string PM10x1, 
                        string PM10y1, 
                        string PM10z1, 
                        string PM10k1, 
                        string NO2x, 
                        string NO2y, 
                        string NO2z, 
                        string NO2k, 
                        string NO2x1, 
                        string NO2y1, 
                        string NO2z1, 
                        string NO2k1, 
                        string O31x, 
                        string O31y, 
                        string O31z, 
                        string O31k, 
                        string O31x1, 
                        string O31y1, 
                        string O31z1, 
                        string O31k1, 
                        string O38x, 
                        string O38y, 
                        string O38z, 
                        string _038k, 
                        string O38x1, 
                        string O38y1, 
                        string O38z1, 
                        string _038k1, 
                        string AQIx, 
                        string AQIy, 
                        string AQIz, 
                        string AQIk, 
                        string AQIo, 
                        string AQIp, 
                        string AQIq, 
                        string AQIr, 
                        string Quality, 
                        string Parameter) {
                ForecastRow rowForecastRow = ((ForecastRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RQ,
                        SDMC,
                        SDQJ,
                        YBSX,
                        PM25x,
                        PM25y,
                        PM25z,
                        PM25k,
                        PM25x1,
                        PM25y1,
                        PM25z1,
                        PM25k1,
                        PM10x,
                        PM10y,
                        PM10z,
                        PM10k,
                        PM10x1,
                        PM10y1,
                        PM10z1,
                        PM10k1,
                        NO2x,
                        NO2y,
                        NO2z,
                        NO2k,
                        NO2x1,
                        NO2y1,
                        NO2z1,
                        NO2k1,
                        O31x,
                        O31y,
                        O31z,
                        O31k,
                        O31x1,
                        O31y1,
                        O31z1,
                        O31k1,
                        O38x,
                        O38y,
                        O38z,
                        _038k,
                        O38x1,
                        O38y1,
                        O38z1,
                        _038k1,
                        AQIx,
                        AQIy,
                        AQIz,
                        AQIk,
                        AQIo,
                        AQIp,
                        AQIq,
                        AQIr,
                        Quality,
                        Parameter};
                rowForecastRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForecastRow);
                return rowForecastRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ForecastDataTable cln = ((ForecastDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ForecastDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRQ = base.Columns["RQ"];
                this.columnSDMC = base.Columns["SDMC"];
                this.columnSDQJ = base.Columns["SDQJ"];
                this.columnYBSX = base.Columns["YBSX"];
                this.columnPM25x = base.Columns["PM25x"];
                this.columnPM25y = base.Columns["PM25y"];
                this.columnPM25z = base.Columns["PM25z"];
                this.columnPM25k = base.Columns["PM25k"];
                this.columnPM25x1 = base.Columns["PM25x1"];
                this.columnPM25y1 = base.Columns["PM25y1"];
                this.columnPM25z1 = base.Columns["PM25z1"];
                this.columnPM25k1 = base.Columns["PM25k1"];
                this.columnPM10x = base.Columns["PM10x"];
                this.columnPM10y = base.Columns["PM10y"];
                this.columnPM10z = base.Columns["PM10z"];
                this.columnPM10k = base.Columns["PM10k"];
                this.columnPM10x1 = base.Columns["PM10x1"];
                this.columnPM10y1 = base.Columns["PM10y1"];
                this.columnPM10z1 = base.Columns["PM10z1"];
                this.columnPM10k1 = base.Columns["PM10k1"];
                this.columnNO2x = base.Columns["NO2x"];
                this.columnNO2y = base.Columns["NO2y"];
                this.columnNO2z = base.Columns["NO2z"];
                this.columnNO2k = base.Columns["NO2k"];
                this.columnNO2x1 = base.Columns["NO2x1"];
                this.columnNO2y1 = base.Columns["NO2y1"];
                this.columnNO2z1 = base.Columns["NO2z1"];
                this.columnNO2k1 = base.Columns["NO2k1"];
                this.columnO31x = base.Columns["O31x"];
                this.columnO31y = base.Columns["O31y"];
                this.columnO31z = base.Columns["O31z"];
                this.columnO31k = base.Columns["O31k"];
                this.columnO31x1 = base.Columns["O31x1"];
                this.columnO31y1 = base.Columns["O31y1"];
                this.columnO31z1 = base.Columns["O31z1"];
                this.columnO31k1 = base.Columns["O31k1"];
                this.columnO38x = base.Columns["O38x"];
                this.columnO38y = base.Columns["O38y"];
                this.columnO38z = base.Columns["O38z"];
                this.column038k = base.Columns["038k"];
                this.columnO38x1 = base.Columns["O38x1"];
                this.columnO38y1 = base.Columns["O38y1"];
                this.columnO38z1 = base.Columns["O38z1"];
                this.column038k1 = base.Columns["038k1"];
                this.columnAQIx = base.Columns["AQIx"];
                this.columnAQIy = base.Columns["AQIy"];
                this.columnAQIz = base.Columns["AQIz"];
                this.columnAQIk = base.Columns["AQIk"];
                this.columnAQIo = base.Columns["AQIo"];
                this.columnAQIp = base.Columns["AQIp"];
                this.columnAQIq = base.Columns["AQIq"];
                this.columnAQIr = base.Columns["AQIr"];
                this.columnQuality = base.Columns["Quality"];
                this.columnParameter = base.Columns["Parameter"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRQ = new global::System.Data.DataColumn("RQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQ);
                this.columnSDMC = new global::System.Data.DataColumn("SDMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSDMC);
                this.columnSDQJ = new global::System.Data.DataColumn("SDQJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSDQJ);
                this.columnYBSX = new global::System.Data.DataColumn("YBSX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYBSX);
                this.columnPM25x = new global::System.Data.DataColumn("PM25x", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25x);
                this.columnPM25y = new global::System.Data.DataColumn("PM25y", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25y);
                this.columnPM25z = new global::System.Data.DataColumn("PM25z", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25z);
                this.columnPM25k = new global::System.Data.DataColumn("PM25k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25k);
                this.columnPM25x1 = new global::System.Data.DataColumn("PM25x1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25x1);
                this.columnPM25y1 = new global::System.Data.DataColumn("PM25y1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25y1);
                this.columnPM25z1 = new global::System.Data.DataColumn("PM25z1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25z1);
                this.columnPM25k1 = new global::System.Data.DataColumn("PM25k1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM25k1);
                this.columnPM10x = new global::System.Data.DataColumn("PM10x", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10x);
                this.columnPM10y = new global::System.Data.DataColumn("PM10y", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10y);
                this.columnPM10z = new global::System.Data.DataColumn("PM10z", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10z);
                this.columnPM10k = new global::System.Data.DataColumn("PM10k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10k);
                this.columnPM10x1 = new global::System.Data.DataColumn("PM10x1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10x1);
                this.columnPM10y1 = new global::System.Data.DataColumn("PM10y1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10y1);
                this.columnPM10z1 = new global::System.Data.DataColumn("PM10z1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10z1);
                this.columnPM10k1 = new global::System.Data.DataColumn("PM10k1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM10k1);
                this.columnNO2x = new global::System.Data.DataColumn("NO2x", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2x);
                this.columnNO2y = new global::System.Data.DataColumn("NO2y", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2y);
                this.columnNO2z = new global::System.Data.DataColumn("NO2z", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2z);
                this.columnNO2k = new global::System.Data.DataColumn("NO2k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2k);
                this.columnNO2x1 = new global::System.Data.DataColumn("NO2x1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2x1);
                this.columnNO2y1 = new global::System.Data.DataColumn("NO2y1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2y1);
                this.columnNO2z1 = new global::System.Data.DataColumn("NO2z1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2z1);
                this.columnNO2k1 = new global::System.Data.DataColumn("NO2k1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO2k1);
                this.columnO31x = new global::System.Data.DataColumn("O31x", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31x);
                this.columnO31y = new global::System.Data.DataColumn("O31y", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31y);
                this.columnO31z = new global::System.Data.DataColumn("O31z", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31z);
                this.columnO31k = new global::System.Data.DataColumn("O31k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31k);
                this.columnO31x1 = new global::System.Data.DataColumn("O31x1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31x1);
                this.columnO31y1 = new global::System.Data.DataColumn("O31y1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31y1);
                this.columnO31z1 = new global::System.Data.DataColumn("O31z1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31z1);
                this.columnO31k1 = new global::System.Data.DataColumn("O31k1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO31k1);
                this.columnO38x = new global::System.Data.DataColumn("O38x", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO38x);
                this.columnO38y = new global::System.Data.DataColumn("O38y", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO38y);
                this.columnO38z = new global::System.Data.DataColumn("O38z", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO38z);
                this.column038k = new global::System.Data.DataColumn("038k", typeof(string), null, global::System.Data.MappingType.Element);
                this.column038k.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column038k");
                this.column038k.ExtendedProperties.Add("Generator_UserColumnName", "038k");
                base.Columns.Add(this.column038k);
                this.columnO38x1 = new global::System.Data.DataColumn("O38x1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO38x1);
                this.columnO38y1 = new global::System.Data.DataColumn("O38y1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO38y1);
                this.columnO38z1 = new global::System.Data.DataColumn("O38z1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO38z1);
                this.column038k1 = new global::System.Data.DataColumn("038k1", typeof(string), null, global::System.Data.MappingType.Element);
                this.column038k1.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column038k1");
                this.column038k1.ExtendedProperties.Add("Generator_UserColumnName", "038k1");
                base.Columns.Add(this.column038k1);
                this.columnAQIx = new global::System.Data.DataColumn("AQIx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIx);
                this.columnAQIy = new global::System.Data.DataColumn("AQIy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIy);
                this.columnAQIz = new global::System.Data.DataColumn("AQIz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIz);
                this.columnAQIk = new global::System.Data.DataColumn("AQIk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIk);
                this.columnAQIo = new global::System.Data.DataColumn("AQIo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIo);
                this.columnAQIp = new global::System.Data.DataColumn("AQIp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIp);
                this.columnAQIq = new global::System.Data.DataColumn("AQIq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIq);
                this.columnAQIr = new global::System.Data.DataColumn("AQIr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAQIr);
                this.columnQuality = new global::System.Data.DataColumn("Quality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuality);
                this.columnParameter = new global::System.Data.DataColumn("Parameter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameter);
                this.columnPM25x1.Caption = "PM25x";
                this.columnPM25y1.Caption = "PM25y";
                this.columnPM25z1.Caption = "PM25z";
                this.columnPM25k1.Caption = "PM25k";
                this.columnPM10x.Caption = "PM25x";
                this.columnPM10y.Caption = "PM25y";
                this.columnPM10z.Caption = "PM25z";
                this.columnPM10k.Caption = "PM25x";
                this.columnPM10x1.Caption = "PM25y";
                this.columnPM10y1.Caption = "PM25z";
                this.columnPM10z1.Caption = "PM25k";
                this.columnPM10k1.Caption = "PM25k";
                this.columnNO2x.Caption = "PM25x";
                this.columnNO2y.Caption = "PM25y";
                this.columnNO2z.Caption = "PM25z";
                this.columnNO2k.Caption = "PM25k";
                this.columnNO2x1.Caption = "PM25x";
                this.columnNO2y1.Caption = "PM25y";
                this.columnNO2z1.Caption = "PM25z";
                this.columnNO2k1.Caption = "PM25k";
                this.columnO31x1.Caption = "O31x";
                this.columnO31y1.Caption = "O31y";
                this.columnO31z1.Caption = "O31z";
                this.columnO31k1.Caption = "O31k";
                this.columnO38x1.Caption = "O38x";
                this.columnO38y1.Caption = "O38y";
                this.columnO38z1.Caption = "O38z";
                this.column038k1.Caption = "038k";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ForecastRow NewForecastRow() {
                return ((ForecastRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ForecastRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ForecastRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ForecastRowChanged != null)) {
                    this.ForecastRowChanged(this, new ForecastRowChangeEvent(((ForecastRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ForecastRowChanging != null)) {
                    this.ForecastRowChanging(this, new ForecastRowChangeEvent(((ForecastRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ForecastRowDeleted != null)) {
                    this.ForecastRowDeleted(this, new ForecastRowChangeEvent(((ForecastRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ForecastRowDeleting != null)) {
                    this.ForecastRowDeleting(this, new ForecastRowChangeEvent(((ForecastRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveForecastRow(ForecastRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetForcast ds = new DataSetForcast();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ForecastDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column名称;
            
            private global::System.Data.DataColumn column优良;
            
            private global::System.Data.DataColumn column轻度;
            
            private global::System.Data.DataColumn column中度;
            
            private global::System.Data.DataColumn column重度;
            
            private global::System.Data.DataColumn column严重;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FODataTable() {
                this.TableName = "FO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 名称Column {
                get {
                    return this.column名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 优良Column {
                get {
                    return this.column优良;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 轻度Column {
                get {
                    return this.column轻度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 中度Column {
                get {
                    return this.column中度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 重度Column {
                get {
                    return this.column重度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 严重Column {
                get {
                    return this.column严重;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORow this[int index] {
                get {
                    return ((FORow)(this.Rows[index]));
                }
            }
            
            public event FORowChangeEventHandler FORowChanging;
            
            public event FORowChangeEventHandler FORowChanged;
            
            public event FORowChangeEventHandler FORowDeleting;
            
            public event FORowChangeEventHandler FORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFORow(FORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORow AddFORow(string 名称, string 优良, string 轻度, string 中度, string 重度, string 严重) {
                FORow rowFORow = ((FORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        名称,
                        优良,
                        轻度,
                        中度,
                        重度,
                        严重};
                rowFORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFORow);
                return rowFORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FODataTable cln = ((FODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column名称 = base.Columns["名称"];
                this.column优良 = base.Columns["优良"];
                this.column轻度 = base.Columns["轻度"];
                this.column中度 = base.Columns["中度"];
                this.column重度 = base.Columns["重度"];
                this.column严重 = base.Columns["严重"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column名称 = new global::System.Data.DataColumn("名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column名称);
                this.column优良 = new global::System.Data.DataColumn("优良", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column优良);
                this.column轻度 = new global::System.Data.DataColumn("轻度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column轻度);
                this.column中度 = new global::System.Data.DataColumn("中度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column中度);
                this.column重度 = new global::System.Data.DataColumn("重度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column重度);
                this.column严重 = new global::System.Data.DataColumn("严重", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column严重);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORow NewFORow() {
                return ((FORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FORowChanged != null)) {
                    this.FORowChanged(this, new FORowChangeEvent(((FORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FORowChanging != null)) {
                    this.FORowChanging(this, new FORowChangeEvent(((FORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FORowDeleted != null)) {
                    this.FORowDeleted(this, new FORowChangeEvent(((FORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FORowDeleting != null)) {
                    this.FORowDeleting(this, new FORowChangeEvent(((FORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFORow(FORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetForcast ds = new DataSetForcast();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EvalutionDTRow : global::System.Data.DataRow {
            
            private EvalutionDTDataTable tableEvalutionDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EvalutionDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEvalutionDT = ((EvalutionDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LST {
                get {
                    try {
                        return ((string)(this[this.tableEvalutionDT.LSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EvalutionDT”中列“LST”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEvalutionDT.LSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Night {
                get {
                    try {
                        return ((string)(this[this.tableEvalutionDT.NightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EvalutionDT”中列“Night”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEvalutionDT.NightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AM {
                get {
                    try {
                        return ((string)(this[this.tableEvalutionDT.AMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EvalutionDT”中列“AM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEvalutionDT.AMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM {
                get {
                    try {
                        return ((string)(this[this.tableEvalutionDT.PMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EvalutionDT”中列“PM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEvalutionDT.PMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DayAVG {
                get {
                    try {
                        return ((string)(this[this.tableEvalutionDT.DayAVGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EvalutionDT”中列“DayAVG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEvalutionDT.DayAVGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SocreCount {
                get {
                    try {
                        return ((string)(this[this.tableEvalutionDT.SocreCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EvalutionDT”中列“SocreCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEvalutionDT.SocreCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLSTNull() {
                return this.IsNull(this.tableEvalutionDT.LSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLSTNull() {
                this[this.tableEvalutionDT.LSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNightNull() {
                return this.IsNull(this.tableEvalutionDT.NightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNightNull() {
                this[this.tableEvalutionDT.NightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAMNull() {
                return this.IsNull(this.tableEvalutionDT.AMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAMNull() {
                this[this.tableEvalutionDT.AMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMNull() {
                return this.IsNull(this.tableEvalutionDT.PMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMNull() {
                this[this.tableEvalutionDT.PMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayAVGNull() {
                return this.IsNull(this.tableEvalutionDT.DayAVGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayAVGNull() {
                this[this.tableEvalutionDT.DayAVGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocreCountNull() {
                return this.IsNull(this.tableEvalutionDT.SocreCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocreCountNull() {
                this[this.tableEvalutionDT.SocreCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ForecastRow : global::System.Data.DataRow {
            
            private ForecastDataTable tableForecast;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ForecastRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForecast = ((ForecastDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RQ {
                get {
                    try {
                        return ((string)(this[this.tableForecast.RQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“RQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.RQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SDMC {
                get {
                    try {
                        return ((string)(this[this.tableForecast.SDMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“SDMC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.SDMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SDQJ {
                get {
                    try {
                        return ((string)(this[this.tableForecast.SDQJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“SDQJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.SDQJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YBSX {
                get {
                    try {
                        return ((string)(this[this.tableForecast.YBSXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“YBSX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.YBSXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25x {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25xColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25x”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25xColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25y {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25yColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25y”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25yColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25z {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25z”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25k {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25k”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25x1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25x1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25x1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25x1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25y1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25y1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25y1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25y1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25z1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25z1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25z1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25z1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM25k1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM25k1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM25k1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM25k1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10x {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10xColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10x”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10xColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10y {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10yColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10y”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10yColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10z {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10z”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10k {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10k”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10x1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10x1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10x1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10x1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10y1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10y1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10y1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10y1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10z1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10z1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10z1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10z1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM10k1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.PM10k1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“PM10k1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.PM10k1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2x {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2xColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2x”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2xColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2y {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2yColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2y”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2yColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2z {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2z”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2k {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2k”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2x1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2x1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2x1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2x1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2y1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2y1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2y1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2y1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2z1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2z1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2z1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2z1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO2k1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.NO2k1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“NO2k1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.NO2k1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31x {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31xColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31x”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31xColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31y {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31yColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31y”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31yColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31z {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31z”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31k {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31k”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31x1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31x1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31x1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31x1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31y1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31y1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31y1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31y1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31z1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31z1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31z1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31z1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O31k1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O31k1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O31k1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O31k1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O38x {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O38xColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O38x”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O38xColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O38y {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O38yColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O38y”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O38yColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O38z {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O38zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O38z”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O38zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _038k {
                get {
                    try {
                        return ((string)(this[this.tableForecast._038kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“038k”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast._038kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O38x1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O38x1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O38x1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O38x1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O38y1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O38y1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O38y1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O38y1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string O38z1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast.O38z1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“O38z1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.O38z1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _038k1 {
                get {
                    try {
                        return ((string)(this[this.tableForecast._038k1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“038k1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast._038k1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIx {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIy {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIz {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIk {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIk”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIo {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIp {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIp”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIq {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AQIr {
                get {
                    try {
                        return ((string)(this[this.tableForecast.AQIrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“AQIr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.AQIrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quality {
                get {
                    try {
                        return ((string)(this[this.tableForecast.QualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“Quality”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.QualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Parameter {
                get {
                    try {
                        return ((string)(this[this.tableForecast.ParameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Forecast”中列“Parameter”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableForecast.ParameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRQNull() {
                return this.IsNull(this.tableForecast.RQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRQNull() {
                this[this.tableForecast.RQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSDMCNull() {
                return this.IsNull(this.tableForecast.SDMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSDMCNull() {
                this[this.tableForecast.SDMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSDQJNull() {
                return this.IsNull(this.tableForecast.SDQJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSDQJNull() {
                this[this.tableForecast.SDQJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYBSXNull() {
                return this.IsNull(this.tableForecast.YBSXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYBSXNull() {
                this[this.tableForecast.YBSXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25xNull() {
                return this.IsNull(this.tableForecast.PM25xColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25xNull() {
                this[this.tableForecast.PM25xColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25yNull() {
                return this.IsNull(this.tableForecast.PM25yColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25yNull() {
                this[this.tableForecast.PM25yColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25zNull() {
                return this.IsNull(this.tableForecast.PM25zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25zNull() {
                this[this.tableForecast.PM25zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25kNull() {
                return this.IsNull(this.tableForecast.PM25kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25kNull() {
                this[this.tableForecast.PM25kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25x1Null() {
                return this.IsNull(this.tableForecast.PM25x1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25x1Null() {
                this[this.tableForecast.PM25x1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25y1Null() {
                return this.IsNull(this.tableForecast.PM25y1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25y1Null() {
                this[this.tableForecast.PM25y1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25z1Null() {
                return this.IsNull(this.tableForecast.PM25z1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25z1Null() {
                this[this.tableForecast.PM25z1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM25k1Null() {
                return this.IsNull(this.tableForecast.PM25k1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM25k1Null() {
                this[this.tableForecast.PM25k1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10xNull() {
                return this.IsNull(this.tableForecast.PM10xColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10xNull() {
                this[this.tableForecast.PM10xColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10yNull() {
                return this.IsNull(this.tableForecast.PM10yColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10yNull() {
                this[this.tableForecast.PM10yColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10zNull() {
                return this.IsNull(this.tableForecast.PM10zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10zNull() {
                this[this.tableForecast.PM10zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10kNull() {
                return this.IsNull(this.tableForecast.PM10kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10kNull() {
                this[this.tableForecast.PM10kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10x1Null() {
                return this.IsNull(this.tableForecast.PM10x1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10x1Null() {
                this[this.tableForecast.PM10x1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10y1Null() {
                return this.IsNull(this.tableForecast.PM10y1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10y1Null() {
                this[this.tableForecast.PM10y1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10z1Null() {
                return this.IsNull(this.tableForecast.PM10z1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10z1Null() {
                this[this.tableForecast.PM10z1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPM10k1Null() {
                return this.IsNull(this.tableForecast.PM10k1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPM10k1Null() {
                this[this.tableForecast.PM10k1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2xNull() {
                return this.IsNull(this.tableForecast.NO2xColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2xNull() {
                this[this.tableForecast.NO2xColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2yNull() {
                return this.IsNull(this.tableForecast.NO2yColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2yNull() {
                this[this.tableForecast.NO2yColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2zNull() {
                return this.IsNull(this.tableForecast.NO2zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2zNull() {
                this[this.tableForecast.NO2zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2kNull() {
                return this.IsNull(this.tableForecast.NO2kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2kNull() {
                this[this.tableForecast.NO2kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2x1Null() {
                return this.IsNull(this.tableForecast.NO2x1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2x1Null() {
                this[this.tableForecast.NO2x1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2y1Null() {
                return this.IsNull(this.tableForecast.NO2y1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2y1Null() {
                this[this.tableForecast.NO2y1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2z1Null() {
                return this.IsNull(this.tableForecast.NO2z1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2z1Null() {
                this[this.tableForecast.NO2z1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO2k1Null() {
                return this.IsNull(this.tableForecast.NO2k1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO2k1Null() {
                this[this.tableForecast.NO2k1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31xNull() {
                return this.IsNull(this.tableForecast.O31xColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31xNull() {
                this[this.tableForecast.O31xColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31yNull() {
                return this.IsNull(this.tableForecast.O31yColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31yNull() {
                this[this.tableForecast.O31yColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31zNull() {
                return this.IsNull(this.tableForecast.O31zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31zNull() {
                this[this.tableForecast.O31zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31kNull() {
                return this.IsNull(this.tableForecast.O31kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31kNull() {
                this[this.tableForecast.O31kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31x1Null() {
                return this.IsNull(this.tableForecast.O31x1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31x1Null() {
                this[this.tableForecast.O31x1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31y1Null() {
                return this.IsNull(this.tableForecast.O31y1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31y1Null() {
                this[this.tableForecast.O31y1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31z1Null() {
                return this.IsNull(this.tableForecast.O31z1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31z1Null() {
                this[this.tableForecast.O31z1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO31k1Null() {
                return this.IsNull(this.tableForecast.O31k1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO31k1Null() {
                this[this.tableForecast.O31k1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO38xNull() {
                return this.IsNull(this.tableForecast.O38xColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO38xNull() {
                this[this.tableForecast.O38xColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO38yNull() {
                return this.IsNull(this.tableForecast.O38yColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO38yNull() {
                this[this.tableForecast.O38yColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO38zNull() {
                return this.IsNull(this.tableForecast.O38zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO38zNull() {
                this[this.tableForecast.O38zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_038kNull() {
                return this.IsNull(this.tableForecast._038kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_038kNull() {
                this[this.tableForecast._038kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO38x1Null() {
                return this.IsNull(this.tableForecast.O38x1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO38x1Null() {
                this[this.tableForecast.O38x1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO38y1Null() {
                return this.IsNull(this.tableForecast.O38y1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO38y1Null() {
                this[this.tableForecast.O38y1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsO38z1Null() {
                return this.IsNull(this.tableForecast.O38z1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetO38z1Null() {
                this[this.tableForecast.O38z1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_038k1Null() {
                return this.IsNull(this.tableForecast._038k1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_038k1Null() {
                this[this.tableForecast._038k1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIxNull() {
                return this.IsNull(this.tableForecast.AQIxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIxNull() {
                this[this.tableForecast.AQIxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIyNull() {
                return this.IsNull(this.tableForecast.AQIyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIyNull() {
                this[this.tableForecast.AQIyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIzNull() {
                return this.IsNull(this.tableForecast.AQIzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIzNull() {
                this[this.tableForecast.AQIzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIkNull() {
                return this.IsNull(this.tableForecast.AQIkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIkNull() {
                this[this.tableForecast.AQIkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIoNull() {
                return this.IsNull(this.tableForecast.AQIoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIoNull() {
                this[this.tableForecast.AQIoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIpNull() {
                return this.IsNull(this.tableForecast.AQIpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIpNull() {
                this[this.tableForecast.AQIpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIqNull() {
                return this.IsNull(this.tableForecast.AQIqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIqNull() {
                this[this.tableForecast.AQIqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAQIrNull() {
                return this.IsNull(this.tableForecast.AQIrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAQIrNull() {
                this[this.tableForecast.AQIrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityNull() {
                return this.IsNull(this.tableForecast.QualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityNull() {
                this[this.tableForecast.QualityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParameterNull() {
                return this.IsNull(this.tableForecast.ParameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParameterNull() {
                this[this.tableForecast.ParameterColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FORow : global::System.Data.DataRow {
            
            private FODataTable tableFO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFO = ((FODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 名称 {
                get {
                    try {
                        return ((string)(this[this.tableFO.名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FO”中列“名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFO.名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 优良 {
                get {
                    try {
                        return ((string)(this[this.tableFO.优良Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FO”中列“优良”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFO.优良Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 轻度 {
                get {
                    try {
                        return ((string)(this[this.tableFO.轻度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FO”中列“轻度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFO.轻度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 中度 {
                get {
                    try {
                        return ((string)(this[this.tableFO.中度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FO”中列“中度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFO.中度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 重度 {
                get {
                    try {
                        return ((string)(this[this.tableFO.重度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FO”中列“重度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFO.重度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 严重 {
                get {
                    try {
                        return ((string)(this[this.tableFO.严重Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FO”中列“严重”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFO.严重Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is名称Null() {
                return this.IsNull(this.tableFO.名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set名称Null() {
                this[this.tableFO.名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is优良Null() {
                return this.IsNull(this.tableFO.优良Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set优良Null() {
                this[this.tableFO.优良Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is轻度Null() {
                return this.IsNull(this.tableFO.轻度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set轻度Null() {
                this[this.tableFO.轻度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is中度Null() {
                return this.IsNull(this.tableFO.中度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set中度Null() {
                this[this.tableFO.中度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is重度Null() {
                return this.IsNull(this.tableFO.重度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set重度Null() {
                this[this.tableFO.重度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is严重Null() {
                return this.IsNull(this.tableFO.严重Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set严重Null() {
                this[this.tableFO.严重Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EvalutionDTRowChangeEvent : global::System.EventArgs {
            
            private EvalutionDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EvalutionDTRowChangeEvent(EvalutionDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EvalutionDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ForecastRowChangeEvent : global::System.EventArgs {
            
            private ForecastRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ForecastRowChangeEvent(ForecastRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ForecastRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FORowChangeEvent : global::System.EventArgs {
            
            private FORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORowChangeEvent(FORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591